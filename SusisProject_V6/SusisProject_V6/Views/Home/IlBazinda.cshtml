@{
    ViewBag.Title = "İl Bazında";
    string apiKey = ViewBag.ApiKey;
}



<main aria-labelledby="title">
    <style>
        .container {
            display: flex;
            flex-direction: row;
            gap: 20px;
        }

        .left-column {
            width: 1700px;
            background-color: darkslateblue;
            padding: 0px;
        }

        .right-column {
            width: 300px; /*300px*/
            background-color: #3B3363;
            padding: 20px;
            padding-left: 1px;
            padding-right: 12px;
        }

        .active-il {
            background-color: navy;
            color: white;
        }

        .mt-2 {
            background-color: #393360;
            border-radius: 8px;
            padding: 16px;
        }

        .il-item {
            cursor: pointer;
            padding: 8px;
            border-radius: 4px;
            transition: background-color 0.3s, color 0.3s;
            display: flex;
            align-items: center;
        }

            .il-item:hover {
                background-color: #332c52;
                color: #eb8153;
            }

            .il-item p {
                margin: 0;
                font-size: 14px;
                color: #fff;
            }

        .scrollable {
            max-height: 800px;
            overflow-y: auto;
        }

        .selected {
            background-color: #eb8153;
            color: #fff;
        }

        .selected-options {
            margin-top: 10px;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .selected-option {
            display: inline-block;
            padding: 5px 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #332c52;
            color: #fff;
        }

            .selected-option span {
                margin-left: 5px;
                cursor: pointer;
                color: #eb8153;
            }

        .checkbox {
            appearance: none;
            width: 16px;
            height: 16px;
            border: 1px solid #ccc;
            border-radius: 3px;
            margin-right: 8px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            background-color: #fff;
        }

            .checkbox:checked {
                background-color: #eb8153;
            }

                .checkbox:checked::before {
                    content: '✔';
                    color: #fff;
                    font-size: 12px;
                }

        .sticky {
            position: -webkit-sticky;
            position: sticky;
            top: 0;
            z-index: 1;
        }

        .custom-col-9 {
            flex: 0 0 80%; /* 80% genişlik */
            max-width: 78%;
            padding-right: 0px;
        }

        .custom-col-3 {
            flex: 0 0 20%; /* 20% genişlik */
            max-width: 22%;
            margin-left: 5px;
        }
        /* Sağ üstte sabit duracak bilgi paneli */
        #info-panel {
            position: absolute;
            top: 60px;
            left: 30px;
            background-color: white;
            padding: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
            z-index: 10; /* Haritanın üstünde durması için z-index veriyoruz */
        }

        /* Bilgi panelindeki semboller ve metinler */
        .info-item {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }

        .info-icon {
            width: 24px;
            height: 24px;
            margin-right: 5px;
        }
    </style>

    <div class="row" style="margin-top:10px !important; flex-wrap: nowrap !important; height: 100vh;">

        <div class="col-xl-9 col-lg-8 col-md-7 custom-col-9">
            <div id="info-panel">
                @*<h4>Veri Sembolleri</h4>*@
                <div id="panel-content">
                    <!-- Bu alan sabit sembol ve isimlerle doldurulacak -->
                    <div class="info-item">
                        <img src="https://maps.google.com/mapfiles/ms/icons/green-dot.png" class="info-icon" />
                        <span>GÖL GÖZLEM</span>
                    </div>
                    <div class="info-item">
                        <img src="https://maps.gstatic.com/mapfiles/ms2/micons/grn-pushpin.png" class="info-icon" />
                        <span>TEUS</span>
                    </div>
                    <div class="info-item">
                        <img src="~/images/icons8-circle-24.png" class="info-icon" />
                        <span>KUYU KALİTE GÖZLEM</span>
                    </div>
                    <div class="info-item">
                        <img src="~/images/icons8-triangle-24.png" class="info-icon" />
                        <span>AGI</span>
                    </div>
                    <div class="info-item">
                        <img src="~/images/symbol_fore_close.png" class="info-icon" />
                        <span>Debimetre</span>
                    </div>
                </div>
            </div>
            <div id="map" class="card" style="height:800px;" @*style="height: 700px; width:900px"*@></div>
        </div>

        <div class="col-xl-3 col-lg-4 col-md-5 custom-col-3" style="max-width:fit-content;">
            <div class="row">
                <div class="col-xl-12 col-lg-6 col-sm-6">

                    <div class="right-column" style="height: 800px !important; width: 287px; margin-left: -10px;">
                        <div class="scrollable">
                            <div class="sticky top-0 bg-[#393360] p-4">
                                <div class="flex flex-col">

                                    <input style="color:white; width:240px;" class="flex h-9 w-full rounded-md border border-gray-600 bg-transparent px-3 py-1 text-xs shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50" placeholder="Ara" name="name" id="searchInput">
                                    <div id="selected-options-list" class="selected-options"></div>
                                </div>
                            </div>
                            <div class="mt-2" id="cardList"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @section Scripts {

        <script>
            let map;
            let allMarkers = [];
            let allCoordinates = [];
            let selectedCities = [];
            var currentInfoWindow = null;

            $(document).ready(function () {
                $.ajax({
                    url: '/Home/GetActiveIller',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        populateCityList(data);
                    },
                    error: function () {
                        console.error('Şehir verilerini çekerken hata oluştu.');
                    }
                });

                $.ajax({
                    url: '/Home/GetHarita',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        allCoordinates = data;
                        initMap();
                        showLocationsOnMap(allCoordinates);
                    },
                    error: function () {
                        console.error('Konum verilerini çekerken hata oluştu.');
                    }
                });

                function populateCityList(data) {
                    const cardList = $('#cardList');
                    data.forEach(item => {
                        const listItem = `<div class="hover:bg-[#332c52] hover:text-[#eb8153] px-4 py-2 il-item" data-ilad="${item.IlAd}">
                                                                                        <p class="text-sm text-gray-200">${item.IlAd}</p>
                                                                                      </div>`;
                        cardList.append(listItem);
                    });

                    $('.il-item').on('click', function () {
                        const selectedIlAd = $(this).data('ilad');
                        const index = selectedCities.indexOf(selectedIlAd);

                        if (index === -1) {
                            selectedCities.push(selectedIlAd);
                            const selectedOptionHtml = `<div class="selected-option" data-value="${selectedIlAd}">${selectedIlAd} <span class="remove-option">&#10006;</span></div>`;
                            $('#selected-options-list').append(selectedOptionHtml);
                            $(this).addClass('selected');
                        } else {
                            selectedCities.splice(index, 1);
                            $(`.selected-option[data-value="${selectedIlAd}"]`).remove();
                            $(this).removeClass('selected');
                        }

                        filterLocationsBySelectedCities();
                    });

                    $('#searchInput').on('input', function () {
                        const searchTerm = $(this).val().toLowerCase();
                        $('.il-item').each(function () {
                            const ilAd = $(this).data('ilad').toLowerCase();
                            if (ilAd.includes(searchTerm)) {
                                $(this).show();
                            } else {
                                $(this).hide();
                            }
                        });
                    });

                    $('#selected-options-list').on('click', '.remove-option', function () {
                        const optionValue = $(this).parent().data('value');
                        selectedCities = selectedCities.filter(il => il !== optionValue);
                        $(this).parent().remove();
                        $(`.il-item[data-ilad="${optionValue}"]`).removeClass('selected');
                        filterLocationsBySelectedCities();
                    });
                }

                function initMap() {
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: { lat: 38.58013936192805, lng: 28.08175943206895 }, // Manisa, Salihli, Pazarköy 38.58013936192805, 28.08175943206895
                        zoom: 9
                    });
                }


                function showLocationsOnMap(locations) {
                    clearMarkers();
                    console.log("Locations to be displayed on map:", locations);

                    locations.forEach(location => {
                        if (location.KonumX != null && location.KonumY != null) {
                            let markerIcon;

                            // İlk olarak fkTip
                            switch (location.CihazAd) {
                                //case "TEUS":
                                //    switch (location.Durum) {
                                //        case "1":
                                //            markerIcon = "https://maps.gstatic.com/mapfiles/ms2/micons/grn-pushpin.png";  // Yeşil pin simgesi
                                //            break;
                                //        case "0":
                                //            markerIcon = "https://maps.gstatic.com/mapfiles/ms2/micons/ylw-pushpin.png";  // Sarı pin simgesi
                                //            break;
                                //    }
                                //    break;
                                case location.CihazAd.toLowerCase().includes("teus") ? location.CihazAd : "":  // "TEUS" içeren tüm veriler
                                    switch (location.Durum) {
                                        case "1":
                                            markerIcon = "https://maps.gstatic.com/mapfiles/ms2/micons/grn-pushpin.png";  // Yeşil pin simgesi
                                            break;
                                        case "0":
                                            markerIcon = "https://maps.gstatic.com/mapfiles/ms2/micons/ylw-pushpin.png";  // Sarı pin simgesi
                                            break;
                                        case "2":
                                            markerIcon = "https://maps.gstatic.com/mapfiles/ms2/micons/purple-pushpin.png";
                                            break;
                                        case "3":
                                            markerIcon = "https://maps.gstatic.com/mapfiles/ms2/micons/red-pushpin.png";
                                            break;
                                        default:
                                            markerIcon = {
                                                path: google.maps.SymbolPath.BACKWARD_CLOSED_ARROW, // Varsayılan sembol
                                                strokeWeight: 1,
                                                scale: 7
                                            };
                                            break;
                                    }
                                    break;
                                case "AGI":
                                    markerIcon = {
                                        path: 'M -2,-2 2,-2 0,2 z', // Üçgen (SVG path)
                                        strokeWeight: 1,
                                        scale: 7
                                    };
                                    break;
                                case "KANAL GÖZLEM":
                                    switch (location.Durum) {
                                        case "1":
                                            markerIcon = {
                                                url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png', // Yeşil pin
                                                scaledSize: new google.maps.Size(40, 40) // Boyut
                                            };
                                            break;
                                        case "0":
                                            markerIcon = {
                                                url: 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png', // Sarı pin
                                                scaledSize: new google.maps.Size(40, 40)
                                            };
                                            break;
                                        case "2":
                                            markerIcon = {
                                                url: 'http://maps.google.com/mapfiles/ms/icons/purple-dot.png', // Yeşil pin
                                                scaledSize: new google.maps.Size(40, 40) // Boyut
                                            };
                                            break;
                                        case "3":
                                            markerIcon = {
                                                url: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png', // Sarı pin
                                                scaledSize: new google.maps.Size(40, 40)
                                            };
                                            break;
                                        default:
                                            markerIcon = {
                                                path: google.maps.SymbolPath.BACKWARD_CLOSED_ARROW, // Varsayılan sembol
                                                strokeWeight: 1,
                                                scale: 7
                                            };
                                            break;
                                    }
                                    break;
                                case "Debimetre":
                                    markerIcon = {
                                        path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW, // Ok sembolü
                                        strokeWeight: 1,
                                        scale: 7
                                    };
                                    break;
                                case "KUYU KALİTE GÖZLEM":
                                    markerIcon = {
                                        path: google.maps.SymbolPath.CIRCLE, // Yuvarlak sembol
                                        strokeWeight: 1,
                                        scale: 7
                                    };
                                    break;
                                default:
                                    markerIcon = {
                                        path: google.maps.SymbolPath.BACKWARD_CLOSED_ARROW, // Varsayılan sembol
                                        strokeWeight: 1,
                                        scale: 7
                                    };
                                    break;
                            }

                            // Sonra durum
                            switch (location.Durum) {
                                case "1":
                                    markerIcon.fillColor = 'green';
                                    markerIcon.fillOpacity = 1;
                                    markerIcon.strokeColor = 'black';
                                    break;
                                case "0":
                                    markerIcon.fillColor = 'yellow';
                                    markerIcon.fillOpacity = 1;
                                    markerIcon.strokeColor = 'orange';
                                    break;
                                case "2":
                                    markerIcon.fillColor = 'purple';
                                    markerIcon.fillOpacity = 1;
                                    markerIcon.strokeColor = 'black';
                                    break;
                                case "3":
                                    markerIcon.fillColor = 'red';
                                    markerIcon.fillOpacity = 1;
                                    markerIcon.strokeColor = 'orange';
                                    break;
                                default:
                                    markerIcon.fillColor = 'yellow';
                                    markerIcon.fillOpacity = 1;
                                    markerIcon.strokeColor = 'black';
                                    break;
                            }

                            const marker = new google.maps.Marker({
                                position: { lat: parseFloat(location.KonumX), lng: parseFloat(location.KonumY) },
                                map: map,
                                icon: markerIcon,
                                title: location.CihazAd
                            });

                            console.log("Marker added at position:", { lat: parseFloat(location.KonumX), lng: parseFloat(location.KonumY) });

                            const infowindow = new google.maps.InfoWindow({
                                content: `<div><strong>${location.CihazAd || ''}</strong></div>
                                                                           <div><strong>ImeiNo:</strong> ${location.ImeiNo || ''}</div>
                                                                           <div><strong>Ölçüm Yeri:</strong> ${location.OlcumYeri || ''}</div>
                                                                           <div><strong>Su Seviye:</strong> ${location.SuSeviye || ''}</div>
                                                                           <div><strong>Akü:</strong> ${location.Aku || ''}</div>
                                                                           <div><strong>Son Data:</strong> ${location.SonData || ''}</div>
                                                                           <div><strong>Cihaz Adı :</strong> ${location.CihazAd || ''}</div>
                                                                           <div><strong>İl:</strong> ${location.IlAd || ''}</div>
                                                                           <div><strong>İlçe:</strong> ${location.Ilce || ''}</div>
                                                                           <div><strong>IP No:</strong> ${location.IpNo || ''}</div>
                                                                           <div><strong>SIM Kart No:</strong> ${location.SimCardNo || ''}</div>
                                                                           <div><strong>Marka:</strong> ${location.fkMarka || ''}</div>
                                                                           <div><strong>Tip:</strong> ${location.fkTip || ''}</div>`
                            });

                            marker.addListener('click', function () {
                                // Eğer daha önce bir InfoWindow açıksa kapat
                                if (currentInfoWindow) {
                                    currentInfoWindow.close();
                                }

                                // Yeni InfoWindow'u aç ve currentInfoWindow olarak ayarla
                                infowindow.open(map, marker);
                                currentInfoWindow = infowindow;
                            });

                            allMarkers.push(marker);
                        } else {
                            console.warn("Invalid location data:", location);
                        }
                    });
                }

                function clearMarkers() {
                    allMarkers.forEach(marker => marker.setMap(null));
                    allMarkers = [];
                }

                function filterLocationsBySelectedCities() {
                    if (selectedCities.length === 0) {
                        showLocationsOnMap(allCoordinates);
                    } else {
                        const filteredLocations = allCoordinates.filter(location => selectedCities.includes(location.IlAd));
                        showLocationsOnMap(filteredLocations);
                    }
                }
            });
        </script>

        @*<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZ-ARlakPGzJRf-Cj2_F8ZI46nwkl9CtU&callback=initMap" async defer></script>*@
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA6QEcjxD_o5anMlAqh4Aa395xlxmaC0EY&callback=initMap" async defer></script>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

        <script src="~/vendor/global/global.min.js"></script>
        <script src="~/vendor/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
        <script src="~/vendor/chart.js/Chart.bundle.min.js"></script>
        <script src="~/vendor/owl-carousel/owl.carousel.js"></script>
        <script src="~/js/custom.min.js"></script>
    }
</main>



